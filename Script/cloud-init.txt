#!bin/bash
# Docker & Kubernetes install (kubeadm type)

# Docker install
sudo apt-get -y update
sudo apt-get -y install \
 apt-transport-https \
 ca-certificates \
 curl \
 gnupg \
 lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 echo \
 "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
 $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin

# Kubernetes install
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get -y update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


## (in case) kubeadm command  failed##
sudo rm /etc/containerd/config.toml
sudo systemctl restart containerd
##########################################

# Create Cluster (Only Control-plane)
#sudo kubeadm init --pod-network-cidr=172.16.0.0/16
#mkdir -p $HOME/.kube
#sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
#sudo chown $(id -u):$(id -g) $HOME/.kube/config


# Create CNI(Only Control-plane), Network Plugin Type(Calico)
#latest 20230516
#curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/calico.yaml -O
#kubectl apply -f calico.yaml


# Create Token(Only Control-plane)
#sudo kubeadm token create --print-join-command


# Join Cluster(Only Node)
# ex)sudo kubeadm join <xxxxxxx> --token <xxxxxxx> --discovery-token-ca-cert-hash <xxxxxxxx>
